{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vishnunagpal-local\\\\online-food-ordering\\\\frontend\\\\src\\\\components\\\\StripeCheckout.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from 'axios';\n\n// Load your publishable key from Stripe\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your-publishable-key-here');\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n    if (error) {\n      setMessage(error.message);\n      return;\n    }\n\n    // Send paymentMethod.id to your server to create a payment intent\n    const response = await axios.post('/api/payment_intents', {\n      payment_method: paymentMethod.id\n    });\n    const {\n      client_secret\n    } = response.data;\n    const {\n      error: confirmError\n    } = await stripe.confirmCardPayment(client_secret);\n    if (confirmError) {\n      setMessage(confirmError.message);\n    } else {\n      setMessage('Payment successful!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"bg-white p-6 rounded-lg shadow-md max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n      className: \"p-2 mb-4 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full bg-blue-500 text-white p-2 rounded\",\n      disabled: !stripe,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-green-500\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"ZHCMcAcu2p/E6fxwy1kRNC3N8Tg=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst StripeCheckout = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StripeCheckout;\nexport default StripeCheckout;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"StripeCheckout\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","axios","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","_s","stripe","elements","message","setMessage","handleSubmit","e","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","response","post","payment_method","id","client_secret","data","confirmError","confirmCardPayment","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","StripeCheckout","_c2","$RefreshReg$"],"sources":["C:/Users/vishnunagpal-local/online-food-ordering/frontend/src/components/StripeCheckout.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport axios from 'axios';\r\n\r\n// Load your publishable key from Stripe\r\nconst stripePromise = loadStripe('your-publishable-key-here');\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card: cardElement,\r\n    });\r\n\r\n    if (error) {\r\n      setMessage(error.message);\r\n      return;\r\n    }\r\n\r\n    // Send paymentMethod.id to your server to create a payment intent\r\n    const response = await axios.post('/api/payment_intents', {\r\n      payment_method: paymentMethod.id,\r\n    });\r\n\r\n    const { client_secret } = response.data;\r\n\r\n    const { error: confirmError } = await stripe.confirmCardPayment(client_secret);\r\n\r\n    if (confirmError) {\r\n      setMessage(confirmError.message);\r\n    } else {\r\n      setMessage('Payment successful!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-md max-w-md mx-auto\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Payment</h2>\r\n      <CardElement className=\"p-2 mb-4 border rounded\" />\r\n      <button type=\"submit\" className=\"w-full bg-blue-500 text-white p-2 rounded\" disabled={!stripe}>\r\n        Pay Now\r\n      </button>\r\n      {message && <p className=\"mt-4 text-green-500\">{message}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst StripeCheckout = () => {\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <CheckoutForm />\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default StripeCheckout;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}